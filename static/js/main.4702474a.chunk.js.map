{"version":3,"sources":["redux/auth/auth-selector.js","Components/UserMenu.js","Components/LoginBar.js","privat-route/PrivatRoute.js","public-route/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/contacts/contacts-action.js","redux/auth/auth-operation.js","redux/auth/auth-action.js"],"names":["state","auth","isAuthenticated","user","name","useStyles","makeStyles","theme","root","display","alignItems","marginLeft","menuButton","marginRight","spacing","btn","backgroundColor","link","textDecoration","title","fontSize","mapDispatchToProps","logoutUser","authOperation","logout","connect","userName","authSelector","classes","className","Button","type","onClick","variant","color","LoginBar","exact","to","isAuth","authSelectors","Component","component","routeProps","render","props","redirectTo","restricted","flexGrow","home","loader","position","top","left","transform","HomePage","lazy","RegisterPage","LoginPage","ContactList","onGetUser","getUser","useEffect","AppBar","Toolbar","fallback","height","width","path","contacts","createReducer","newActions","addContactsSuccess","action","payload","deleteContactsSuccess","filter","contact","id","getContactsSuccess","loading","axiosAddContacts","errorContacts","axiosDeleteContacts","errorGetContacts","axiosGetContacts","filterContacts","_","createUser","contactReducers","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getUserSuccess","token","error","registerError","loginError","logoutErrors","getUserError","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","createAction","errorDeleteContacts","registerUser","loginUser","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","login","loginRequest","console","log","logoutRequest","logoutError","getState","persistToken","getUserRequest","get"],"mappings":"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","file":"static/js/main.4702474a.chunk.js","sourcesContent":["const getAuth = state => state.auth.isAuthenticated;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default { getAuth, getUserName };\r\n","import Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../redux/auth/auth-selector';\r\nimport authOperation from '../redux/auth/auth-operation';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 'auto',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  '& > * + *': {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  btn: {\r\n    backgroundColor: 'green',\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    marginRight: 20,\r\n    fontSize: 18,\r\n  },\r\n}));\r\n\r\nconst UserMenu = ({ userName, logoutUser }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <span className={classes.title}>Hi, {userName}!</span>\r\n\r\n      <Button\r\n        type=\"button\"\r\n        onClick={logoutUser}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.btn}\r\n      >\r\n        Выйти\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userName: authSelector.getUserName(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { logoutUser: authOperation.logout };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft: 'auto',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  '& > * + *': {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  btn: {\r\n    backgroundColor: 'green',\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nconst LoginBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NavLink exact to=\"/register\" className={classes.link}>\r\n        <Button\r\n          // color=\"inherit\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.btn}\r\n        >\r\n          Регистрация\r\n        </Button>\r\n      </NavLink>\r\n\r\n      <NavLink exact to=\"/login\" className={classes.link}>\r\n        <Button\r\n          // color=\"inherit\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.btn}\r\n        >\r\n          Логин\r\n        </Button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginBar;\r\n","import authSelectors from '../redux/auth/auth-selector';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivatRoute = ({ component: Component, isAuth, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: authSelectors.getAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivatRoute);\r\n","import authSelectors from '../redux/auth/auth-selector';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuth,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuth && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: authSelectors.getAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport UserMenu from './Components/UserMenu';\nimport LoginBar from './Components/LoginBar';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport authSelector from './redux/auth/auth-selector';\nimport authOperation from './redux/auth/auth-operation';\nimport PrivatRoute from './privat-route/PrivatRoute';\nimport PublicRoute from './public-route/PublicRoute';\nimport Loader from 'react-loader-spinner';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: 'auto',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  '& > * + *': {\n    marginLeft: theme.spacing(2),\n  },\n  home: {\n    backgroundColor: 'blue',\n    marginRight: 20,\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%,-50%)',\n  },\n}));\n\nconst HomePage = lazy(() => import('./Components/Pages/HomePage'));\nconst RegisterPage = lazy(() => import('./Components/Pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./Components/Pages/LoginPage'));\nconst ContactList = lazy(() => import('./Components/Pages/ContactList'));\n\nconst App = ({ isAuth, onGetUser }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    onGetUser();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink exact to=\"/\" className={classes.link}>\n            <Button\n              className={classes.home}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Home\n            </Button>\n          </NavLink>\n          {isAuth && (\n            <NavLink exact to=\"/contacts\" className={classes.link}>\n              <Button\n                className={classes.home}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Contacts\n              </Button>\n            </NavLink>\n          )}\n\n          {isAuth ? <UserMenu /> : <LoginBar />}\n        </Toolbar>\n      </AppBar>\n      <Suspense\n        fallback={\n          <>\n            <Loader\n              className={classes.loader}\n              type=\"Rings\"\n              color=\"red\"\n              height={100}\n              width={100}\n            />\n          </>\n        }\n      >\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <PrivatRoute path=\"/contacts\" component={ContactList} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterPage}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginPage}\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: authSelector.getAuth(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  onGetUser: authOperation.getUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport newActions from './contacts-action';\r\n\r\n// const initialState = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nconst contacts = createReducer([], {\r\n  [newActions.addContactsSuccess]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [newActions.deleteContactsSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n  [newActions.getContactsSuccess]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [newActions.axiosAddContacts]: () => true,\r\n  [newActions.addContactsSuccess]: () => false,\r\n  [newActions.errorContacts]: () => false,\r\n\r\n  [newActions.axiosDeleteContacts]: () => true,\r\n  [newActions.deleteContactsSuccess]: () => false,\r\n  [newActions.errorGetContacts]: () => false,\r\n\r\n  [newActions.axiosGetContacts]: () => true,\r\n  [newActions.getContactsSuccess]: () => false,\r\n  [newActions.errorGetContacts]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [newActions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst createUser = createReducer(\r\n  {},\r\n  {\r\n    [newActions.createUser]: (_, { payload }) => payload,\r\n  },\r\n);\r\n\r\nconst contactReducers = combineReducers({\r\n  contacts,\r\n  loading,\r\n  filter,\r\n  createUser,\r\n});\r\n\r\nexport default contactReducers;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-action';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutErrors]: (_, { payload }) => payload,\r\n  [authActions.getUserError]: (_, { payload }) => payload.user,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n\r\nexport default authReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\n// const ignoredActions = [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER];\r\n\r\n// const serializableCheck = {\r\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const getContacts = createAction('contacts');\r\n// const addContacts = createAction('addContact');\r\n// const deleteContacts = createAction('delete/Contacts');\r\n\r\nconst axiosAddContacts = createAction('contacts/AxiosAddContacts');\r\nconst addContactsSuccess = createAction('success/AddContacts');\r\nconst errorContacts = createAction('error/AddContacts');\r\n\r\nconst axiosDeleteContacts = createAction('contacts/AxiosDeleteContacts');\r\nconst deleteContactsSuccess = createAction('success/DeleteContacts');\r\nconst errorDeleteContacts = createAction('error/AddContacts');\r\n\r\nconst axiosGetContacts = createAction('contacts/AxiosGetContacts');\r\nconst getContactsSuccess = createAction('success/GetContacts');\r\nconst errorGetContacts = createAction('error/GetContacts');\r\n\r\nconst filterContacts = createAction('filter/Contacts');\r\n\r\nconst registerUser = createAction('user/Register');\r\nconst loginUser = createAction('user/Login');\r\n\r\nconst action = {\r\n  // addContacts,\r\n  // getContacts,\r\n  // deleteContacts,\r\n  axiosAddContacts,\r\n  addContactsSuccess,\r\n  errorContacts,\r\n  axiosDeleteContacts,\r\n  deleteContactsSuccess,\r\n  errorDeleteContacts,\r\n  axiosGetContacts,\r\n  getContactsSuccess,\r\n  errorGetContacts,\r\n  filterContacts,\r\n  registerUser,\r\n  loginUser,\r\n};\r\nexport default action;\r\n","import axios from 'axios';\r\nimport authActions from './auth-action';\r\n\r\naxios.defaults.baseURL = 'http://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ``;\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  //   console.log(credentials);\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  console.log(credentials);\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getUser = () => async (dispatch, getState) => {\r\n  const persistToken = getState();\r\n\r\n  if (!persistToken.auth.token) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistToken.auth.token);\r\n\r\n  dispatch(authActions.getUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    console.log(response.data);\r\n\r\n    dispatch(authActions.getUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getUserError(error.message));\r\n  }\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getUser,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst getUserRequest = createAction('auth/getUserRequest');\r\nconst getUserSuccess = createAction('auth/getUserSuccess');\r\nconst getUserError = createAction('auth/getUserError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst action = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n};\r\n\r\nexport default action;\r\n"],"sourceRoot":""}