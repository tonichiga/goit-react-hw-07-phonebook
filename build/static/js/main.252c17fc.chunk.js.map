{"version":3,"sources":["Components/ButtonAddContact.module.scss","Components/VisibileContacts.module.scss","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","Components/InputForm.js","Components/VisibileContacts/VisibileContactsComponent.js","Components/VisibleContactsHook.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/VisibileContacts/VisibileContactsComponent.module.scss"],"names":["module","exports","getContacts","createAction","action","addContacts","deleteContacts","axiosAddContacts","addContactsSuccess","errorContacts","axiosDeleteContacts","deleteContactsSuccess","errorDeleteContacts","axiosGetContacts","getContactsSuccess","errorGetContacts","axios","defaults","baseURL","contact","dispatch","actions","post","then","data","catch","error","id","delete","get","InputForm","state","name","number","handleChange","e","target","value","setState","reset","hanldesubmit","preventDefault","props","onSubmit","this","type","onChange","className","s","addButton","Component","connect","axiosAddContact","ContactElement","deleteContact","contactElement","contactWrapper","contactName","contactButton","onClick","getContact","useState","filter","setFilter","useEffect","contacts","map","console","log","findContacts","placeholder","list","App","onGetContact","createReducer","newActions","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.252c17fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"ButtonAddContact_addButton__jkTO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"VisibileContacts_list__1Sgrb\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = createAction('contacts');\r\nconst addContacts = createAction('addContact');\r\nconst deleteContacts = createAction('delete/Contacts');\r\n\r\nconst axiosAddContacts = createAction('contacts/AxiosAddContacts');\r\nconst addContactsSuccess = createAction('success/AddContacts');\r\nconst errorContacts = createAction('error/AddContacts');\r\n\r\nconst axiosDeleteContacts = createAction('contacts/AxiosDeleteContacts');\r\nconst deleteContactsSuccess = createAction('success/DeleteContacts');\r\nconst errorDeleteContacts = createAction('error/AddContacts');\r\n\r\nconst axiosGetContacts = createAction('contacts/AxiosGetContacts');\r\nconst getContactsSuccess = createAction('success/GetContacts');\r\nconst errorGetContacts = createAction('error/GetContacts');\r\n\r\nconst action = {\r\n  addContacts,\r\n  getContacts,\r\n  deleteContacts,\r\n  axiosAddContacts,\r\n  addContactsSuccess,\r\n  errorContacts,\r\n  axiosDeleteContacts,\r\n  deleteContactsSuccess,\r\n  errorDeleteContacts,\r\n  axiosGetContacts,\r\n  getContactsSuccess,\r\n  errorGetContacts,\r\n};\r\nexport default action;\r\n","import axios from 'axios';\r\nimport actions from './contacts-action';\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst addTodo = contact => dispatch => {\r\n  dispatch(actions.axiosAddContacts());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(actions.addContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.errorContacts(error)));\r\n};\r\n\r\nconst deleteContacts = id => dispatch => {\r\n  dispatch(actions.axiosDeleteContacts());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactsSuccess(id)))\r\n    .catch(error => dispatch(actions.errorDeleteContacts(error)));\r\n};\r\n\r\nconst getContacts = data => dispatch => {\r\n  dispatch(actions.axiosGetContacts());\r\n\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(data => dispatch(actions.getContactsSuccess(data.data)))\r\n    .catch(error => dispatch(actions.errorGetContacts(error)));\r\n};\r\n// const getContacts = contact => dispatch => {\r\n//   axios.get('/contacts', contact).then(({data}) => dispatch({\"success/getContacts\", payload: data}));\r\n\r\n//   dispatch('contacts/GetContacts');\r\n// };\r\nexport default { addTodo, deleteContacts, getContacts };\r\n\r\n// actions.getContactsSuccess(data))\r\n","import s from './ButtonAddContact.module.scss';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport action from '../redux/contacts/contacts-action';\r\nimport axiosAddContact from '../redux/contacts/contacts-operation';\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  hanldesubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      // id: 111,\r\n    });\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.hanldesubmit}>\r\n        <p>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n        ></input>\r\n\r\n        <p>Number</p>\r\n\r\n        <input\r\n          type=\"number\"\r\n          onChange={this.handleChange}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n        ></input>\r\n\r\n        <button type=\"submit\" className={s.addButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(axiosAddContact.addTodo(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(InputForm);\r\n","import s from './VisibileContactsComponent.module.scss';\r\n\r\nconst ContactElement = ({ name, number, deleteContact, id }) => {\r\n  return (\r\n    <li className={s.contactElement}>\r\n      <div className={s.contactWrapper}>\r\n        <p className={s.contactName}>{name}</p>\r\n        <p>{number}</p>\r\n      </div>\r\n      <button className={s.contactButton} onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default ContactElement;\r\n","import { useState } from 'react';\r\nimport ContactElement from './VisibileContacts/';\r\nimport s from './VisibileContacts.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport action from '../redux/contacts/contacts-operation';\r\nimport { useEffect } from 'react';\r\n\r\nconst VisibleContactsHook = ({ data, deleteContact, getContact }) => {\r\n  const [filter, setFilter] = useState('');\r\n  const findContact = () => {\r\n    const contacts = data.contacts;\r\n    const filtered = contacts.filter(contact => contact.name === filter);\r\n    return filtered;\r\n  };\r\n\r\n  const handleContactFinder = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContact();\r\n    data.contacts.map(data => console.log('THIS', data.number));\r\n    console.log(data.contacts);\r\n  }, []);\r\n\r\n  const findContacts = findContact();\r\n\r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n\r\n      <p>Find contact</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter name\"\r\n        onChange={handleContactFinder}\r\n        value={filter}\r\n      ></input>\r\n\r\n      <p>{findContacts.map(({ name }) => name)}</p>\r\n\r\n      <ul className={s.list}>\r\n        {data.contacts.map(data => (\r\n          <ContactElement\r\n            name={data.name}\r\n            number={data.number}\r\n            key={data.id}\r\n            deleteContact={deleteContact}\r\n            id={data.id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteContact: id => dispatch(action.deleteContacts(id)),\r\n    getContact: () => dispatch(action.getContacts()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(VisibleContactsHook);\r\n","import React from 'react';\nimport InputForm from './Components/InputForm';\nimport VisibleContactsHook from './Components/VisibleContactsHook';\n\nconst App = ({ value, onGetContact }) => {\n  // state = {\n  //   contacts: [],\n  // };\n\n  // const formSubmitHandler = data => {\n  //\n  //   return newContact;\n  // };\n  // const { contacts } = this.state;\n  // if (contacts.find(contact => contact.name === newContact.name)) {\n  //   return alert('такой контакт существует');\n  // }\n\n  //   this.setState(prevState => {\n  //     return { contacts: [newContact, ...prevState.contacts] };\n  //   });\n  // };\n\n  // deleteContact = contactId => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n  // componentDidMount() {\n  //   let getContacts = [];\n\n  //   getContacts = JSON.parse(localStorage.getItem('Contacts'));\n\n  //   if (getContacts === null) {\n  //     getContacts = [];\n  //   }\n\n  //   this.setState({\n  //     contacts: getContacts,\n  //   });\n  // }\n  // componentDidUpdate() {\n  //   localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\n  // }\n\n  // const data = this.state.contacts;\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n      <InputForm />\n      <VisibleContactsHook />\n    </div>\n    //  deleteContact={this.deleteContact}\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport action from './contacts-action';\r\nimport newActions from './contacts-action';\r\n\r\n// const initialState = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nconst contacts = createReducer([], {\r\n  [newActions.addContactsSuccess]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [newActions.deleteContactsSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n  [newActions.getContactsSuccess]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n});\r\n\r\n// axiosDeleteContacts,\r\n// deleteContactsSuccess,\r\n// errorDeleteContacts,\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { myAction } from './redux/actions';\n\n// store.dispatch(myAction(10));\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactElement\":\"VisibileContactsComponent_contactElement__55zTv\",\"contactName\":\"VisibileContactsComponent_contactName__38ssG\",\"contactButton\":\"VisibileContactsComponent_contactButton__2Q267\",\"contactWrapper\":\"VisibileContactsComponent_contactWrapper__23VB4\"};"],"sourceRoot":""}